---

- name: apt install packages for SNI verification
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - python-pip
      - python-openssl
      - python-pyasn1

- name: pip install package for SNI verification
  pip:
    name: ndg-httpsclient
    state: latest

- name: set docker_user subuid range
  lineinfile:
    path: /etc/subuid
    state: present
    line: "{{ docker_user }}:{{ docker_id }}:65536"

- name: set docker_user subgid range
  lineinfile:
    path: /etc/subgid
    state: present
    line: "{{ docker_user }}:{{ docker_id }}:65536"

- name: install usernetes dependencies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: true
  vars:
    packages:
      - golang-go
      - uidmap

- name: download usernetes source
  unarchive:
    src: "https://github.com/rootless-containers/usernetes/archive/v{{usernetes_version}}.tar.gz"
    remote_src: yes
    dest: "/home/{{ docker_user }}/"
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    mode: 0770
  when: usernetes_type == "source"

- name: download usernetes binary
  unarchive:
    src: "https://github.com/rootless-containers/usernetes/releases/download/v{{ usernetes_version }}/usernetes-x86_64.tbz"
    remote_src: yes
    dest: "/home/{{ docker_user }}/"
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    mode: 0770
  when: usernetes_type == "binary"

- name: create ~/usernetes source sym link
  file:
    src: "/home/{{ docker_user }}/usernetes-{{usernetes_version}}"
    dest: "/home/{{ docker_user }}/usernetes"
    owner: "{{ docker_user }}"
    group: "{{ docker_user }}"
    state: link
  when: usernetes_type == "source"

- name: make usernetes source
  command: make
  args:
    chdir: "/home/{{ docker_user }}/usernetes/"
  when: usernetes_type == "source"

